version: "3.8"

services:
  web-nextjs:
    image: vleango/node:18.14.1
    ports:
      - "3000:3000"
    env_file:
      - ./config/environments/.nextjs.env
      - ./config/environments/.nextjs.local.env
    volumes:
      - ./services/web-nextjs:/app
    stdin_open: true
    tty: true
    logging:
      driver: "json-file"
    command: bash -c "npm install && npm run dev"
  web-rails:
    image: vleango/ruby-rails:3.2.1_7.0.4.2
    ports:
      - "4000:3000"
    env_file:
      - ./config/environments/.rails.env
      - ./config/environments/.rails.local.env
      - ./config/environments/.db.env
    logging:
      driver: "json-file"
    volumes:
      - ~/.ssh:/home/rails/.ssh
      - ./services/web-rails:/app
      # - bundled_gems_web_rails:/app/vendor/gems
    depends_on:
      - db-postgres
    stdin_open: true
    tty: true
    # to run with byebug:
    # docker-compose up -d && docker attach groundzero_api-rails_1
    # command: bash -c "rm -f /app/tmp/pids/server.pid && bin/rails server -p 3000 -b 0.0.0.0"
    command: bash -c "bundle check || bundle install --without production && rm -f /app/tmp/pids/server.pid && ./bin/dev"
  db-postgres:
    image: postgres:14.5
    restart: always
    ports:
      - 3001:5432
    logging:
      driver: "none"
    volumes:
      - db-postgres:/var/lib/postgresql/data
    env_file:
      - ./config/environments/.db.env
  db-admin:
    image: adminer
    restart: always
    ports:
      - 3002:8080
    logging:
      driver: "none"
    depends_on:
      - db-postgres
  graphiql:
    image: plutoz/graphiql
    ports:
      - 4001:4000
    # visit: http://localhost:4001/graphql
    environment:
      - API_URL=localhost:4000/graphql
    depends_on:
      - web-rails
volumes:
  db-postgres: {}
  bundled_gems_web_rails: {}
