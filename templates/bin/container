#!/usr/bin/env ruby

# Check if app name argument is provided
if ARGV.empty?
  puts "Error: Missing arguments"
  puts "Usage: ./run.rb COMMAND"
  puts "Commands: sh, debugger, up, down, logs, db_clean"
  exit 1
end

command = ARGV.join(' ')

app_name = File.basename(File.expand_path('..', __dir__))
service_name = "web-rails"

command_sh = "docker compose run --rm #{service_name} bash"
command_debugger = "docker compose up -d && docker attach #{app_name}-#{service_name}-1"
command_up = "docker compose up"
command_down = "docker compose down"
command_logs = "docker compose logs -f"
command_db_clean = "docker compose run --rm #{service_name} bash -c 'rm db/schema.rb && bin/rails db:drop db:create db:migrate db:seed'"
command_fresh_app = "docker compose run --rm #{service_name} bash -c 'touch .local.env && sudo chown -R rails:1000 /app/vendor/gems && bundle install && yarn install'"
command_run = "docker compose run --rm #{service_name} bash -c 'bundle exec #{command}'"

case command
when "sh"
  system(command_sh)
when "debugger"
  system(command_debugger)
when "up"
  system(command_up)
when "down"
  system(command_down)
when "logs"
  system(command_logs)
when "db_clean"
  system(command_db_clean)
when "fresh_app"
  puts "add .local.env and fix permissions for install gems"
  system(command_fresh_app)

  puts "setup db"
  system(command_db_clean)
else
  system(command_run)
end
